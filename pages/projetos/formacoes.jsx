import { useState } from "react";
import Head from "next/head";

import Center from "../../components/layout/Center";
import Title from "../../components/items/Title";
import Card from "../../components/sets/Card";
import ModalSlide from "../../components/sets/ModalSlide";
import { formacoes } from "../../data/projetos-formacoes";

import { AnimatePresence } from "framer-motion";
import { Swiper, SwiperSlide } from "swiper/react";
import SwiperCore, { Navigation } from "swiper";
import "swiper/css";
import "swiper/css/navigation";

import Media from "react-media";

SwiperCore.use([Navigation]);

export default function Formacoes() {
  //Modal
  //Define qual modal deve aparecer
  //Ativa ou desativa o modal
  const [modal, setModalOpen] = useState(0);
  const [open, setOpen] = useState(false);

  return (
    <>
      <Head>
        <title>Creche Chico Xavier</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center>
        <header>
          <Title title="Cursos e" span="Formações" />
        </header>
        <Media query="(min-width: 875px)">
          {(matches) => {
            return matches ? (
              <>
                <Swiper spaceBetween={0} slidesPerView={3.2} navigation={true}>
                  {formacoes.map((formacao) => (
                    <SwiperSlide key={formacao.key}>
                      <Card
                        title={formacao.title}
                        subtitle={formacao.subtitle}
                        imageTop={formacao.link}
                        objectFit="cover"
                        objectPosition="50% 0%"
                        cardonClick={() => (
                          <>
                            {setOpen(true)}
                            {setModalOpen(formacao.key)}
                          </>
                        )}
                      />
                    </SwiperSlide>
                  ))}
                </Swiper>
                <AnimatePresence initial={false}>
                  {open && (
                    <ModalSlide
                      key={formacoes[modal].key}
                      onClick={() => setOpen(false)}
                      title={formacoes[modal].title}
                      subtitle={formacoes[modal].subtitle}
                      slidesPerView={3.3}
                      images={formacoes[modal].images}
                    />
                  )}
                </AnimatePresence>
              </>
            ) : (
              <>
                <Swiper spaceBetween={0} slidesPerView={2.2} navigation={true}>
                  {formacoes.map((formacao) => (
                    <SwiperSlide key={formacao.key}>
                      <Card
                        title={formacao.title}
                        subtitle={formacao.subtitle}
                        imageTop={formacao.link}
                        objectFit="cover"
                        objectPosition="50% 0%"
                        cardonClick={() => (
                          <>
                            {setOpen(true)}
                            {setModalOpen(formacao.key)}
                          </>
                        )}
                      />
                    </SwiperSlide>
                  ))}
                </Swiper>
                <AnimatePresence initial={false}>
                  {open && (
                    <ModalSlide
                      key={formacoes[modal].key}
                      onClick={() => setOpen(false)}
                      title={formacoes[modal].title}
                      subtitle={formacoes[modal].subtitle}
                      slidesPerView={1}
                      images={formacoes[modal].images}
                    />
                  )}
                </AnimatePresence>
              </>
            );
          }}
        </Media>
      </Center>
      <style jsx>{`
        main nav .card {
          background: hsl(44deg 100% 56%);
        }

        .card::after {
          background: #fff;
        }

        .images {
          position: relative;
          width: 40rem;
          height: 40rem;
        }
      `}</style>

      <style jsx global>{`
        main .swiper {
          position: relative;
          width: 100vw;
          margin: 0;
        }

        main .swiper .card {
          height: inherit;
          min-width: 0;
        }

        @media (max-width: 875px) {
          main .swiper {
            padding: 2rem 2rem 5rem;
          }
        }
      `}</style>
    </>
  );
}
